name: Test Dev

on:
  push:
  workflow_dispatch:

env:
  NAPI_CLI_VERSION: 2.7.0
  TURBO_VERSION: 1.3.2-canary.1
  RUST_TOOLCHAIN: nightly-2022-06-12
  PNPM_VERSION: 7.2.1

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
      # we build a dev binary for use in CI so skip downloading
      # canary next-swc binaries in the monorepo
      NEXT_SKIP_NATIVE_POSTINSTALL: 1
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
      isRelease: ${{ steps.check-release.outputs.IS_RELEASE }}
      weekNum: ${{ steps.get-week.outputs.WEEK }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange == 'nope' }}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/checkout@v3
        with:
          fetch-depth: 25

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Check non-docs only change
        run: echo "::set-output name=DOCS_CHANGE::$(node scripts/run-for-change.js --not --type docs --exec echo 'nope')"
        id: docs-change

      - run: echo ${{steps.docs-change.outputs.DOCS_CHANGE}}

      - run: npm i -g pnpm@${PNPM_VERSION}

      - id: get-store-path
        run: echo ::set-output name=STORE_PATH::$(pnpm store path)

      - uses: actions/cache@v3
        id: cache-pnpm-store
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install
      - run: pnpm run build
      - run: node run-tests.js --timings --write-timings -g 1/1
      - run: node ./scripts/fetch-tags.mjs ${{ github.sha }}

      - id: check-release
        run: |
          if [[ $(git describe --exact-match 2> /dev/null || :) = v* ]];
            then
              echo "::set-output name=IS_RELEASE::true"
            else
              echo "::set-output name=IS_RELEASE::false"
          fi
      # We use week in the turbo cache key to keep the cache from infinitely growing
      - id: get-week
        run: echo ::set-output name=WEEK::$(date +%U)

      - uses: actions/cache@v3
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  build-native-test:
    name: Build native binary for tests and metrics
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/checkout@v3
        with:
          fetch-depth: 25

      - run: echo "::set-output name=DOCS_CHANGE::$(node scripts/run-for-change.js --not --type docs --exec echo 'nope')"
        id: docs-change

      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        with:
          node-version: 16
          check-latest: true

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        with:
          path: ~/.cargo/registry
          key: stable-ubuntu-latest-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v3
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        with:
          path: ~/.cargo/git
          key: stable-ubuntu-latest-cargo-index

      # We use week in the turbo cache key to keep the cache from infinitely growing
      - id: get-week
        run: echo ::set-output name=WEEK::$(date +%U)

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-
            turbo-${{ github.job }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-
            turbo-${{ github.job }}-canary-${{ steps.get-week.outputs.WEEK }}-

      # We use restore-key to pick latest cache.
      # We will not get exact match, but doc says
      # "If there are multiple partial matches for a restore key, the action returns the most recently created cache."
      # So we get latest cache
      - name: Cache built files
        uses: actions/cache@v3
        with:
          path: ./packages/next-swc/target
          key: next-swc-cargo-cache-dev-ubuntu-latest-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            next-swc-cargo-cache-dev-ubuntu-latest

      # since the repo's dependencies aren't installed we need
      # to install napi globally
      - run: npm i -g @napi-rs/cli@${{ env.NAPI_CLI_VERSION }} turbo@${{ env.TURBO_VERSION }} pnpm@${PNPM_VERSION}
      - name: Build
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        run: turbo run build-native --cache-dir=".turbo" -- --release
        env:
          MACOSX_DEPLOYMENT_TARGET: '10.13'

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native/next-swc.linux-x64-gnu.node

      - name: Clear the cargo caches
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE == 'nope' }}
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache

  testProdRecord:
    name: Test Production (record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        group: [1, 2]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npx @replayio/playwright install all
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type production --timings -g ${{ matrix.group }}/2 --debug
        name: Run test/production
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProd / Group ${{ matrix.group }} / Node ${{ matrix.node }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          # DEBUG: pw:browser*

      - uses: replayio/action-upload@v0.4.4
        if: always()
        with:
          api-key: rwk_1LfNb6DteBpcQbb5dcy3XZbo1jidYqN5qQr5uYYfiVt
          public: true

  testProdNoRecord:
    name: Test Production (no record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        group: [1, 2]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type production --timings -g ${{ matrix.group }}/2 --debug
        name: Run test/production
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProd / Group ${{ matrix.group }} / Node ${{ matrix.node }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_REPLAY_NO_RECORD: 1
          # DEBUG: pw:browser*

  testProdOriginal:
    name: Test Production (original)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        group: [1, 2]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type production --timings -g ${{ matrix.group }}/2
        name: Run test/production
        if: ${{needs.build.outputs.docsChange == 'nope'}}

  testProdReact17Record:
    name: Test Production (react v17) (record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_REACT_VERSION: ^17
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npx @replayio/playwright install all
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type production --timings -g ${{ matrix.group }}/2 --debug
        name: Run test/production
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProdReact17 / Group ${{ matrix.group }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          # DEBUG: pw:browser*

      - uses: replayio/action-upload@v0.4.4
        if: always()
        with:
          api-key: rwk_1LfNb6DteBpcQbb5dcy3XZbo1jidYqN5qQr5uYYfiVt
          public: true

  testProdReact17NoRecord:
    name: Test Production (react v17) (no record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_REACT_VERSION: ^17
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type production --timings -g ${{ matrix.group }}/2 --debug
        name: Run test/production
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProdReact17 / Group ${{ matrix.group }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_REPLAY_NO_RECORD: 1
          # DEBUG: pw:browser*

  testProdReact17Original:
    name: Test Production (react v17) (original)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_REACT_VERSION: ^17
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type production --timings -g ${{ matrix.group }}/2
        name: Run test/production
        if: ${{needs.build.outputs.docsChange == 'nope'}}

  testProdE2ERecord:
    name: Test Production (E2E) (record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      # TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        group: [1, 2, 3]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npx @replayio/playwright install all
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type e2e --timings -g ${{ matrix.group }}/3 --debug
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProdE2E / Group ${{ matrix.group }} / Node ${{ matrix.node }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          NEXT_TEST_MODE: start
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          # DEBUG: pw:browser*

      - uses: replayio/action-upload@v0.4.4
        if: always()
        with:
          api-key: rwk_1LfNb6DteBpcQbb5dcy3XZbo1jidYqN5qQr5uYYfiVt
          public: true

  testProdE2ENoRecord:
    name: Test Production (E2E) (no record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      # TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        group: [1, 2, 3]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type e2e --timings -g ${{ matrix.group }}/3 --debug
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProdE2E / Group ${{ matrix.group }} / Node ${{ matrix.node }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          NEXT_TEST_MODE: start
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_REPLAY_NO_RECORD: 1
          # DEBUG: pw:browser*

  testProdE2EOriginal:
    name: Test Production (E2E) (original)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      # TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        group: [1, 2, 3]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: NEXT_TEST_MODE=start node run-tests.js --type e2e --timings -g ${{ matrix.group }}/3
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange == 'nope'}}

  testProdE2EReact17Record:
    name: Test Production (E2E) (react v17) (record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_REACT_VERSION: ^17
      # TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npx @replayio/playwright install all
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type e2e --timings -g ${{ matrix.group }}/3
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProdE2EReact17 / Group ${{ matrix.group }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          NEXT_TEST_MODE: start
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}

      - uses: replayio/action-upload@v0.4.4
        if: always()
        with:
          api-key: rwk_1LfNb6DteBpcQbb5dcy3XZbo1jidYqN5qQr5uYYfiVt
          public: true

  testProdE2EReact17NoRecord:
    name: Test Production (E2E) (react v17) (no record)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_REACT_VERSION: ^17
      # TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type e2e --timings -g ${{ matrix.group }}/3
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: testProdE2EReact17 / Group ${{ matrix.group }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY: 1
          NEXT_TEST_MODE: start
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_REPLAY_NO_RECORD: 1

  testProdE2EReact17Original:
    name: Test Production (E2E) (react v17) (original)
    runs-on: ubuntu-latest
    needs: [build, build-native-test]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_REACT_VERSION: ^17
      # TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: npm i -g playwright-chromium@1.22.2 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: NEXT_TEST_MODE=start node run-tests.js --type e2e --timings -g ${{ matrix.group }}/3
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange == 'nope'}}
